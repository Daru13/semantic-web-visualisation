!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(require("tippy.js")):"function"==typeof define&&define.amd?define(["tippy.js"],e):e((t=t||self).tippy)}(this,(function(t){"use strict";t=t&&t.hasOwnProperty("default")?t.default:t;class e{constructor(t,e="<undefined>"){this.name=e,this.content=t}[Symbol.iterator](){return this.values()}values(t,e){return t=null!=t?t:0,e=null!=e?e:this.content.length,this.content.slice(t,t+e).values()}get(t){return this.content[t]}map(t,n=this.name){return new e(this.content.map(t),n)}length(){return this.content.length}}class n{constructor(t){this.content=t}length(){return Math.max(...[...this.columns()].map(t=>t.length()))}column(t){return this.content.get(t)}columns(){return this.content.values()}columnNames(){return this.content.keys()}row(t){const e=[];for(let n of this.content.values())e.push(n.get(t));return e}*rows(t,e){const n=[];for(let a of this.content.values())n.push(a.values(t,e));for(;;){let t=!0;const e=[];for(let a of n){const n=a.next();n.done?e.push(null):(e.push(n.value),t=!1)}if(t)return;yield e}}*values(){for(let t of this.columns())for(let e of t.values())yield e}map(t){const e=new Map;for(let n of this.columns())e.set(n.name,n.map(t));return new n(e)}static fromHTMLTable(t){const a=t.querySelectorAll("tr");if(0===a.length)return new n(new Map);const s=a[0].children.length,i=[];for(let t=0;t<s;t++)i.push(a[0].children[t].textContent);const o=new Map;for(let t=0;t<s;t++){const n=[];for(let e=1;e<a.length;e++)n.push(a[e].children[t].textContent);const s=i[t];o.set(s,new e(n,s))}return new n(o)}}class a{constructor(t){this.analysis=t,this.createNode()}createNode(){const t=document.createElement("div");t.classList.add("url-widget"),this.node=t;const e=document.createElement("span"),n=null!==this.analysis.countryCode?this.analysis.countryCode.toLowerCase():"unknown";e.classList.add("country","flag","flag-"+n),t.appendChild(e);const a=document.createElement("span");a.classList.add("domain"),a.textContent=this.analysis.domain,t.appendChild(a);const s=document.createElement("span");s.classList.add("path"),s.innerHTML='<span class="slash">/</span>'+this.analysis.path.map(decodeURIComponent).join('<span class="slash">/</span>').replace(/_/g,'<span class="underscore">_</span>'),t.appendChild(s)}}class s{constructor(t=[]){this.counters=new Map,this.init(t)}init(t){for(let e of t)this.zero(e)}zero(t){this.counters.set(t,0)}count(t,e=1){this.counters.has(t)||this.zero(t);const n=this.counters.get(t);this.counters.set(t,n+e)}countOf(t){return this.counters.has(t)?this.counters.get(t):0}sortedEntries(){let t=[];return this.counters.forEach((e,n,a)=>{let s=0;for(;s<t.length&&t[s].count>e;)s+=1;t.splice(s,0,{key:n,count:e})}),t}static fromEnum(t){const e=Object.values(t).filter(t=>!isNaN(Number(t)));return new s(e)}}var i;!function(t){t[t.Empty=0]="Empty",t[t.Text=1]="Text",t[t.URL=2]="URL"}(i||(i={}));class o{constructor(t){this.properties=["protocol","subdomains","domain","tld","path"],this.column=t,this.cellTypes=s.fromEnum(i),this.countries=new s,this.protocols=new s,this.subdomains=new s,this.domains=new s,this.tlds=new s,this.paths=new s,this.init(),this.analyse()}init(){}analyse(){for(let t of this.column)if(t.type===C.URL){const e=t.analysis;this.cellTypes.count(i.URL),this.countries.count(e.country);for(let t=0;t<this.properties.length;t++)this.countPropertyValue(e,this.properties[t])}else null==t||""===t.toString().trim()?this.cellTypes.count(i.Empty):this.cellTypes.count(i.Text)}countPropertyValue(t,e){let n=this.getValue(t,e);this.getCounter(e).count(n)}getValue(t,e){switch(e){case"protocol":return t.protocol;case"domain":return t.domain;case"subdomains":return t.subdomains[0];case"tld":return t.tld;case"path":return t.path[0];default:console.log("Unkown property",e)}}getCounter(t){switch(t){case"protocol":return this.protocols;case"domain":return this.domains;case"subdomains":return this.subdomains;case"tld":return this.tlds;case"path":return this.paths;default:console.log("Unkown property",t)}}}const r={AF:"Afghanistan",AX:"Åland Islands",AL:"Albania",DZ:"Algeria",AS:"American Samoa",AD:"Andorra",AO:"Angola",AI:"Anguilla",AQ:"Antarctica",AG:"Antigua and Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BS:"Bahamas",BH:"Bahrain",BD:"Bangladesh",BB:"Barbados",BY:"Belarus",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia",BQ:"Bonaire",BA:"Bosnia and Herzegovina",BW:"Botswana",BV:"Bouvet Island",BR:"Brazil",IO:"British Indian Ocean Territory",BN:"Brunei Darussalam",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",KH:"Cambodia",CM:"Cameroon",CA:"Canada",CV:"Cape Verde",KY:"Cayman Islands",CF:"Central African Republic",TD:"Chad",CL:"Chile",CN:"China",CX:"Christmas Island",CC:"Cocos (Keeling) Islands",CO:"Colombia",KM:"Comoros",CG:"Congo",CD:"Congo",CK:"Cook Islands",CR:"Costa Rica",CI:"Côte d'Ivoire",HR:"Croatia",CU:"Cuba",CW:"Curaçao",CY:"Cyprus",CZ:"Czech Republic",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",GQ:"Equatorial Guinea",ER:"Eritrea",EE:"Estonia",ET:"Ethiopia",FK:"Falkland Islands (Malvinas)",FO:"Faroe Islands",FJ:"Fiji",FI:"Finland",FR:"France",GF:"French Guiana",PF:"French Polynesia",TF:"French Southern Territories",GA:"Gabon",GM:"Gambia",GE:"Georgia",DE:"Germany",GH:"Ghana",GI:"Gibraltar",GR:"Greece",GL:"Greenland",GD:"Grenada",GP:"Guadeloupe",GU:"Guam",GT:"Guatemala",GG:"Guernsey",GN:"Guinea",GW:"Guinea-Bissau",GY:"Guyana",HT:"Haiti",HM:"Heard Island and McDonald Islands",VA:"Holy See (Vatican City State)",HN:"Honduras",HK:"Hong Kong",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran",IQ:"Iraq",IE:"Ireland",IM:"Isle of Man",IL:"Israel",IT:"Italy",JM:"Jamaica",JP:"Japan",JE:"Jersey",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KP:"North Korea",KR:"South Korea",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Lao People's Democratic Republic",LV:"Latvia",LB:"Lebanon",LS:"Lesotho",LR:"Liberia",LY:"Libya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MO:"Macao",MK:"Macedonia",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands",MQ:"Martinique",MR:"Mauritania",MU:"Mauritius",YT:"Mayotte",MX:"Mexico",FM:"Micronesia",MD:"Moldova",MC:"Monaco",MN:"Mongolia",ME:"Montenegro",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",MM:"Myanmar",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands",NC:"New Caledonia",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger",NG:"Nigeria",NU:"Niue",NF:"Norfolk Island",MP:"Northern Mariana Islands",NO:"Norway",OM:"Oman",PK:"Pakistan",PW:"Palau",PS:"Palestinian Territory",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines",PN:"Pitcairn",PL:"Poland",PT:"Portugal",PR:"Puerto Rico",QA:"Qatar",RE:"Réunion",RO:"Romania",RU:"Russian Federation",RW:"Rwanda",BL:"Saint Barthélemy",SH:"Saint Helena",KN:"Saint Kitts and Nevis",LC:"Saint Lucia",MF:"Saint Martin (French part)",PM:"Saint Pierre and Miquelon",VC:"Saint Vincent and the Grenadines",WS:"Samoa",SM:"San Marino",ST:"Sao Tome and Principe",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SX:"Sint Maarten (Dutch part)",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",GS:"South Georgia and the South Sandwich Islands",SS:"South Sudan",ES:"Spain",LK:"Sri Lanka",SD:"Sudan",SR:"Suriname",SJ:"Svalbard and Jan Mayen",SZ:"Swaziland",SE:"Sweden",CH:"Switzerland",SY:"Syrian Arab Republic",TW:"Taiwan",TJ:"Tajikistan",TZ:"Tanzania",TH:"Thailand",TL:"Timor-Leste",TG:"Togo",TK:"Tokelau",TO:"Tonga",TT:"Trinidad and Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks and Caicos Islands",TV:"Tuvalu",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates",GB:"United Kingdom",UK:"United Kingdom",US:"United States",UM:"United States Minor Outlying Islands",UY:"Uruguay",UZ:"Uzbekistan",VU:"Vanuatu",VE:"Venezuela",VN:"Viet Nam",VG:"British Virgin Islands",VI:"U.S. Virgin Islands",WF:"Wallis and Futuna",EH:"Western Sahara",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe"},l={Afghanistan:"AF","Åland Islands":"AX",Albania:"AL",Algeria:"DZ","American Samoa":"AS",Andorra:"AD",Angola:"AO",Anguilla:"AI",Antarctica:"AQ","Antigua and Barbuda":"AG",Argentina:"AR",Armenia:"AM",Aruba:"AW",Australia:"AU",Austria:"AT",Azerbaijan:"AZ",Bahamas:"BS",Bahrain:"BH",Bangladesh:"BD",Barbados:"BB",Belarus:"BY",Belgium:"BE",Belize:"BZ",Benin:"BJ",Bermuda:"BM",Bhutan:"BT",Bolivia:"BO",Bonaire:"BQ","Bosnia and Herzegovina":"BA",Botswana:"BW","Bouvet Island":"BV",Brazil:"BR","British Indian Ocean Territory":"IO","Brunei Darussalam":"BN",Bulgaria:"BG","Burkina Faso":"BF",Burundi:"BI",Cambodia:"KH",Cameroon:"CM",Canada:"CA","Cape Verde":"CV","Cayman Islands":"KY","Central African Republic":"CF",Chad:"TD",Chile:"CL",China:"CN","Christmas Island":"CX","Cocos (Keeling) Islands":"CC",Colombia:"CO",Comoros:"KM",Congo:"CG","Cook Islands":"CK","Costa Rica":"CR","Côte d'Ivoire":"CI",Croatia:"HR",Cuba:"CU","Curaçao":"CW",Cyprus:"CY","Czech Republic":"CZ",Denmark:"DK",Djibouti:"DJ",Dominica:"DM","Dominican Republic":"DO",Ecuador:"EC",Egypt:"EG","El Salvador":"SV","Equatorial Guinea":"GQ",Eritrea:"ER",Estonia:"EE",Ethiopia:"ET","Falkland Islands (Malvinas)":"FK","Faroe Islands":"FO",Fiji:"FJ",Finland:"FI",France:"FR","French Guiana":"GF","French Polynesia":"PF","French Southern Territories":"TF",Gabon:"GA",Gambia:"GM",Georgia:"GE",Germany:"DE",Ghana:"GH",Gibraltar:"GI",Greece:"GR",Greenland:"GL",Grenada:"GD",Guadeloupe:"GP",Guam:"GU",Guatemala:"GT",Guernsey:"GG",Guinea:"GN","Guinea-Bissau":"GW",Guyana:"GY",Haiti:"HT","Heard Island and McDonald Islands":"HM","Holy See (Vatican City State)":"VA",Honduras:"HN","Hong Kong":"HK",Hungary:"HU",Iceland:"IS",India:"IN",Indonesia:"ID",Iran:"IR",Iraq:"IQ",Ireland:"IE","Isle of Man":"IM",Israel:"IL",Italy:"IT",Jamaica:"JM",Japan:"JP",Jersey:"JE",Jordan:"JO",Kazakhstan:"KZ",Kenya:"KE",Kiribati:"KI","North Korea":"KP","South Korea":"KR",Kuwait:"KW",Kyrgyzstan:"KG","Lao People's Democratic Republic":"LA",Latvia:"LV",Lebanon:"LB",Lesotho:"LS",Liberia:"LR",Libya:"LY",Liechtenstein:"LI",Lithuania:"LT",Luxembourg:"LU",Macao:"MO",Macedonia:"MK",Madagascar:"MG",Malawi:"MW",Malaysia:"MY",Maldives:"MV",Mali:"ML",Malta:"MT","Marshall Islands":"MH",Martinique:"MQ",Mauritania:"MR",Mauritius:"MU",Mayotte:"YT",Mexico:"MX",Micronesia:"FM",Moldova:"MD",Monaco:"MC",Mongolia:"MN",Montenegro:"ME",Montserrat:"MS",Morocco:"MA",Mozambique:"MZ",Myanmar:"MM",Namibia:"NA",Nauru:"NR",Nepal:"NP",Netherlands:"NL","New Caledonia":"NC","New Zealand":"NZ",Nicaragua:"NI",Niger:"NE",Nigeria:"NG",Niue:"NU","Norfolk Island":"NF","Northern Mariana Islands":"MP",Norway:"NO",Oman:"OM",Pakistan:"PK",Palau:"PW","Palestinian Territory":"PS",Panama:"PA","Papua New Guinea":"PG",Paraguay:"PY",Peru:"PE",Philippines:"PH",Pitcairn:"PN",Poland:"PL",Portugal:"PT","Puerto Rico":"PR",Qatar:"QA","Réunion":"RE",Romania:"RO","Russian Federation":"RU",Rwanda:"RW","Saint Barthélemy":"BL","Saint Helena":"SH","Saint Kitts and Nevis":"KN","Saint Lucia":"LC","Saint Martin (French part)":"MF","Saint Pierre and Miquelon":"PM","Saint Vincent and the Grenadines":"VC",Samoa:"WS","San Marino":"SM","Sao Tome and Principe":"ST","Saudi Arabia":"SA",Senegal:"SN",Serbia:"RS",Seychelles:"SC","Sierra Leone":"SL",Singapore:"SG","Sint Maarten (Dutch part)":"SX",Slovakia:"SK",Slovenia:"SI","Solomon Islands":"SB",Somalia:"SO","South Africa":"ZA","South Georgia and the South Sandwich Islands":"GS","South Sudan":"SS",Spain:"ES","Sri Lanka":"LK",Sudan:"SD",Suriname:"SR","Svalbard and Jan Mayen":"SJ",Swaziland:"SZ",Sweden:"SE",Switzerland:"CH","Syrian Arab Republic":"SY",Taiwan:"TW",Tajikistan:"TJ",Tanzania:"TZ",Thailand:"TH","Timor-Leste":"TL",Togo:"TG",Tokelau:"TK",Tonga:"TO","Trinidad and Tobago":"TT",Tunisia:"TN",Turkey:"TR",Turkmenistan:"TM","Turks and Caicos Islands":"TC",Tuvalu:"TV",Uganda:"UG",Ukraine:"UA","United Arab Emirates":"AE","United Kingdom":"GB","United States":"US","United States Minor Outlying Islands":"UM",Uruguay:"UY",Uzbekistan:"UZ",Vanuatu:"VU",Venezuela:"VE","Viet Nam":"VN","British Virgin Islands":"VG","U.S. Virgin Islands":"VI","Wallis and Futuna":"WF","Western Sahara":"EH",Yemen:"YE",Zambia:"ZM",Zimbabwe:"ZW"},d="http://www.w3.org/2000/svg";class h{constructor(t,e){this.dataColumn=t,this.parent=e,this.subdomainsColumns=new Map,this.domainColumn=this.getEmptySankeyColumn(),this.pathColumns=new Map,this.holder=document.createElement("div"),this.holder.classList.add("sankey"),this.svg=document.createElementNS(d,"svg"),this.holder.appendChild(this.svg),e.appendChild(this.holder),this.urlNumber=0,this.maxProportion=0,this.rehighlight=()=>{},this.setupUI()}setupUI(){this.svg.setAttribute("viewBox","0,0,0,0"),this.svg.addEventListener("click",()=>{this.setOpacitySvgElements("1"),this.rehighlight=()=>{}}),this.svg.innerHTML='<defs><filter id="whiteOutlineEffect" ><feMorphology in="SourceAlpha" result = "MORPH" operator = "dilate" radius = "2" /><feColorMatrix in="MORPH" result = "WHITENED" type = "matrix" values = "-1 0 0 1 0, 0 -1 0 1 0, 0 0 -1 1 0, 0 0 0 1 0" /><feMerge><feMergeNode in="WHITENED" /><feMergeNode in="SourceGraphic" /></feMerge>< /filter>< /defs>';const t=document.createElement("p");t.classList.add("description"),t.innerHTML="This diagram represents how the different values of successive URLs parts are related to each other. The thicker and brighter an edge is, the more URLs share the two values it connects. You can change the number of path components to display using the two buttons at the bottom.",this.parent.prepend(t),this.computeColumns(),this.drawColumns(),this.drawEdges()}computeColumns(){for(let t of this.dataColumn)if(t.type===C.URL){let e=t.analysis;this.urlNumber+=1;let n=e.domain+"."+e.tld,a=e.path,s=e.subdomains;this.countSankeyColumnElement(this.domainColumn,n),this.countNext(this.domainColumn.elements.get(n),a[0]);for(let t=0;t<a.length;t++)this.pathColumns.has(t)||this.pathColumns.set(t,this.getEmptySankeyColumn()),this.countSankeyColumnElement(this.pathColumns.get(t),a[t]),t<a.length-1&&this.countNext(this.pathColumns.get(t).elements.get(a[t]),a[t+1]);for(let t=0;t<s.length;t++)this.subdomainsColumns.has(t)||this.subdomainsColumns.set(t,this.getEmptySankeyColumn()),this.countSankeyColumnElement(this.subdomainsColumns.get(t),s[t]),t<s.length-1?this.countNext(this.subdomainsColumns.get(t).elements.get(s[t]),s[t+1]):this.countNext(this.subdomainsColumns.get(t).elements.get(s[t]),n)}for(let t=this.subdomainsColumns.size-1;t>=0;t--)t>1?(this.subdomainsColumns.get(t).nextColumn=this.subdomainsColumns.get(t-1),this.subdomainsColumns.get(t-1).previousColumn=this.subdomainsColumns.get(t)):(this.subdomainsColumns.get(t).nextColumn=this.domainColumn,this.domainColumn.previousColumn=this.subdomainsColumns.get(t));for(let t=0;t<this.pathColumns.size;t++)t>0?(this.pathColumns.get(t-1).nextColumn=this.pathColumns.get(t),this.pathColumns.get(t).previousColumn=this.pathColumns.get(t-1)):(this.domainColumn.nextColumn=this.pathColumns.get(t),this.pathColumns.get(t).previousColumn=this.domainColumn)}countSankeyColumnElement(t,e){if(!t.elements.has(e)){let n=this.getEmptyEleProperties();t.elements.set(e,n)}t.elements.get(e).nb+=1,t.elements.get(e).nb>this.maxProportion&&(this.maxProportion=t.elements.get(e).nb)}countNext(t,e){t.next.has(e)||t.next.set(e,this.getEmptyEdgeProperties()),t.next.get(e).nb+=1,t.next.get(e).nb>this.maxProportion&&(this.maxProportion=t.next.get(e).nb)}drawColumns(){for(let t=this.subdomainsColumns.size-1;t>-1;t--)this.drawColumn(this.subdomainsColumns.get(t),0==t?"Subdomains":"");this.drawColumn(this.domainColumn,"Domain"),this.pathColumns.size>0&&(this.drawColumn(this.pathColumns.get(0),"Path"),this.indexLastPathColumnDrawn=0,this.pathColumns.size>1&&this.addPathButtons())}drawColumn(t,e,n=5,a=0){let s,i=t.y;s=t.previousColumn?t.previousColumn.x+t.previousColumn.width+400:0,t.x=s,null!==t.columnHolder.parentNode&&(t.columnHolder.innerHTML="",t.columnHolder.parentNode.removeChild(t.columnHolder)),this.svg.appendChild(t.columnHolder),this.drawColumnTitle(t,e);let o=this.sortSankeyColumnElements(t);for(let e=Math.min(o.length-1,a);e<Math.min(o.length,n);e++)this.drawElement(o[e].key,o[e].ele,s,i,t),i+=o[e].ele.height+50;let r=0;n>5&&(this.addButton(t.columnHolder,s,i,"-",()=>{this.removeEdges(),this.removeNode(t),this.drawColumn(t,e,n-5),this.drawEdges(),this.rehighlight()}),r+=1),n<t.elements.size&&(this.addButton(t.columnHolder,s,i,"+",()=>{this.removeEdges(),this.drawColumn(t,e,n+5),this.drawEdges(),this.rehighlight()}),r+=1),r>0&&(i+=100),t.height=i+50+60;let l=t.columnHolder.getElementsByTagNameNS(d,"rect");for(let e=0;e<l.length;e++)l.item(e).setAttribute("width",t.width.toString());t.elements.forEach(e=>{e.fromX=e.toX+t.width,e.width=t.width});let h=t.columnHolder.getElementsByTagNameNS(d,"text");for(let e=0;e<h.length;e++)h[e].setAttribute("x",(s+t.width/2).toString());if(2==r){let e=0;t.columnHolder.querySelectorAll(".button").forEach(n=>{let a=n.querySelector("rect");a.setAttribute("width",(t.width/2).toString()),a.setAttribute("x",(parseInt(a.getAttribute("x"))+e).toString()),n.querySelector("text").setAttribute("x",(parseInt(a.getAttribute("x"))+parseInt(a.getAttribute("width"))/2).toString()),e+=t.width/2})}t.drawn=!0,this.adaptSVGViewBox()}drawColumnTitle(t,e){t.columnHolder.appendChild(t.columnTitle),t.columnTitle.innerHTML=e,t.columnTitle.setAttribute("y",(-50).toString()),t.columnTitle.style.fontSize="60px",t.width=t.columnTitle.getBBox().width}drawElement(t,e,n,a,s){let i=e.nb/this.urlNumber,o=Math.max(5,200*i);s.columnHolder.appendChild(e.rectangle),s.columnHolder.appendChild(e.text),e.rectangle.setAttribute("x",n.toString()),e.rectangle.setAttribute("y",a.toString()),e.rectangle.setAttribute("height",o.toString()),e.rectangle.setAttribute("fill",this.getFillColor(i)),e.rectangle.addEventListener("click",e=>{e.preventDefault(),e.stopPropagation(),this.highLight(t,s)}),e.text.innerHTML=t,e.text.style.fontSize="30px";let r=e.text.getBBox().height;e.text.setAttribute("y",(a+o/2+r/4).toString()),this.addToolTip(e.rectangle,100*i);let l=e.text.getBBox().width;l>s.width&&(s.width=l),e.x=n,e.y=a,e.fromX=n,e.fromY=a,e.toX=n,e.toY=a,e.height=o,e.drawn=!0}addButton(t,e,n,a,s){let i=document.createElementNS(d,"g"),o=document.createElementNS(d,"rect"),r=document.createElementNS(d,"text");i.appendChild(o),i.appendChild(r),t.appendChild(i),i.classList.add("button"),o.setAttribute("x",e.toString()),o.setAttribute("y",n.toString()),o.setAttribute("height",50..toString()),o.setAttribute("width","50"),r.innerHTML=a,r.setAttribute("x",e.toString());let l=r.getBBox().height;r.setAttribute("y",(n+25+l/4).toString()),i.addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),s()})}addPathButtons(){let t=document.createElement("div");t.id="path-buttons-holder",this.holder.appendChild(t);const e=document.createElement("p");e.classList.add("title"),e.innerHTML="Path components",t.prepend(e);this.addPathButton("+","add",()=>{this.indexLastPathColumnDrawn<this.pathColumns.size-1&&(this.indexLastPathColumnDrawn+=1,this.drawColumn(this.pathColumns.get(this.indexLastPathColumnDrawn),""),this.drawEdge(this.pathColumns.get(this.indexLastPathColumnDrawn).previousColumn,this.pathColumns.get(this.indexLastPathColumnDrawn)),this.rehighlight())},t),this.addPathButton("-","remove",()=>{this.indexLastPathColumnDrawn>0&&(this.removeColumn(this.pathColumns.get(this.indexLastPathColumnDrawn)),this.removeEdge(this.pathColumns.get(this.indexLastPathColumnDrawn).previousColumn,this.pathColumns.get(this.indexLastPathColumnDrawn)),this.indexLastPathColumnDrawn-=1,this.rehighlight())},t)}addPathButton(t,e,n,a){let s=document.createElement("button");s.classList.add("button",e),s.innerHTML=t,s.addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),n()}),a.appendChild(s)}drawEdges(){for(let t=this.subdomainsColumns.size-1;t>-1;t--)this.drawEdge(this.subdomainsColumns.get(t),this.subdomainsColumns.get(t).nextColumn);for(let t=0;t<=this.indexLastPathColumnDrawn;t++)this.drawEdge(this.pathColumns.get(t).previousColumn,this.pathColumns.get(t))}drawEdge(t,e){this.sortSankeyColumnElements(t).forEach(({key:n,ele:a})=>{this.sortEdges(a.next).forEach(({key:s,edge:i})=>{if(i.drawn)return;if(!a.drawn||!e.elements.get(s).drawn)return;let o=e.elements.get(s),r=i.nb/this.urlNumber,l=Math.max(5,200*r),d=i.path;this.svg.appendChild(d),d.setAttribute("d",`M${a.fromX},${a.fromY} \n                        L${o.toX},${o.toY} \n                        L${o.toX},${o.toY+l} \n                        L${a.fromX},${a.fromY+l}`),d.style.fill=this.getFillColor(r),this.addToolTip(d,100*r),d.addEventListener("click",a=>{a.preventDefault(),a.stopPropagation(),this.highLight(n,t,s,e)}),a.fromY-a.y+l<a.height&&(t.elements.get(n).fromY+=l),o.toY-o.y+l<o.height&&(o.toY+=l),i.drawn=!0})})}removeColumn(t){this.removeNode(t),t.columnHolder.parentNode&&t.columnHolder.parentNode.removeChild(t.columnHolder),t.columnHolder.innerHTML="",t.columnTitle.innerHTML="",t.drawn=!1,this.adaptSVGViewBox()}removeNode(t){t.elements.forEach(t=>{t.drawn=!1})}removeEdges(){for(let t=this.subdomainsColumns.size-1;t>-1;t--)this.removeEdge(this.subdomainsColumns.get(t),this.subdomainsColumns.get(t).nextColumn);for(let t=0;t<=this.indexLastPathColumnDrawn;t++)this.removeEdge(this.pathColumns.get(t).previousColumn,this.pathColumns.get(t))}removeEdge(t,e){for(let n of t.elements.keys()){this.sortEdges(t.elements.get(n).next).forEach(({key:a,edge:s})=>{let i=s.path;null!==i.parentNode&&i.parentNode.removeChild(i),t.elements.get(n).fromX=t.elements.get(n).x+t.elements.get(n).width,t.elements.get(n).fromY=t.elements.get(n).y,e.elements.get(a).toX=e.elements.get(a).x,e.elements.get(a).toY=e.elements.get(a).y,s.drawn=!1})}}addToolTip(e,n){t(e,{content:`${n.toFixed(2)}%`,followCursor:!0})}highLight(t,e,n=t,a=e){this.rehighlight=()=>{this.highLight(t,e,n,a)},this.setOpacitySvgElements("0.1"),e.previousColumn&&this.highlightBefore(e.previousColumn,t),e.elements.get(t).rectangle.style.opacity="1",e.elements.get(t).text.style.opacity="1";try{e.elements.get(t).next.get(n).path.style.opacity="1"}catch(t){}this.highlightAfter(n,a)}highlightBefore(t,e){t.elements.forEach((n,a,s)=>{let i=!1;n.next.forEach((t,n,a)=>{n===e&&(i=!0,t.path.style.opacity="1")}),i&&(n.rectangle.style.opacity="1",n.text.style.opacity="1",t.previousColumn&&this.highlightBefore(t.previousColumn,a))})}highlightAfter(t,e){void 0!==e&&(e.elements.get(t).next.forEach((t,n,a)=>{this.highlightAfter(n,e.nextColumn),t.path.style.opacity="1"}),e.elements.get(t).rectangle.style.opacity="1",e.elements.get(t).text.style.opacity="1")}setOpacitySvgElements(t){this.svg.querySelectorAll("rect, path, text").forEach(e=>{e.parentElement.classList.contains("button")||(e.style.opacity=t)})}getFillColor(t){return`hsl(202, ${80*(t/=this.maxProportion/this.urlNumber)+20}%, 60%`}getEmptyEdgeProperties(){return{nb:0,path:document.createElementNS(d,"path"),drawn:!1}}getEmptySankeyColumn(){return{x:0,y:0,height:0,width:0,elements:new Map,columnHolder:document.createElementNS(d,"g"),columnTitle:document.createElementNS(d,"text"),previousColumn:void 0,nextColumn:void 0,drawn:!1}}getEmptyEleProperties(){return{nb:0,x:0,y:0,width:0,height:0,fromX:0,fromY:0,toX:0,toY:0,next:new Map,rectangle:document.createElementNS(d,"rect"),text:document.createElementNS(d,"text"),drawn:!1}}sortSankeyColumnElements(t){let e=[];return t.elements.forEach((t,n,a)=>{let s=0;for(;s<e.length&&e[s].ele.nb>t.nb;)s+=1;e.splice(s,0,{key:n,ele:t})}),e}sortEdges(t){let e=[];return t.forEach((t,n,a)=>{let s=0;for(;s<e.length&&e[s].edge.nb>t.nb;)s+=1;e.splice(s,0,{key:n,edge:t})}),e}sankeyHeight(){let t=0;for(let e=this.subdomainsColumns.size-1;e>=0;e--)this.subdomainsColumns.get(e).drawn&&(t=Math.max(this.subdomainsColumns.get(e).height,t));this.domainColumn.drawn&&(t=Math.max(this.domainColumn.height,t));for(let e=0;e<this.pathColumns.size;e++)this.pathColumns.get(e).drawn&&(t=Math.max(this.pathColumns.get(e).height,t));return t}sankeyWidth(){let t=0;for(let e=this.subdomainsColumns.size-1;e>=0;e--)this.subdomainsColumns.get(e).drawn&&(t+=this.subdomainsColumns.get(e).width+400);this.domainColumn.drawn&&(t+=this.domainColumn.width+400);for(let e=0;e<this.pathColumns.size;e++)this.pathColumns.get(e).drawn&&(t+=this.pathColumns.get(e).width+400);return t-=400,t}adaptSVGViewBox(){this.svg.getAttribute("viewBox").split(",");this.svg.setAttribute("viewBox",`0,-110,${this.sankeyWidth()},${this.sankeyHeight()}`)}}class u{constructor(t,e,n=t.length()){this.parent=e,this.holder=document.createElement("div"),this.holder.classList.add("word-cloud"),e.appendChild(this.holder),this.wordCount=new s,this.wordToOriginal=new Map,this.setupUI(t,n)}setupUI(t,e){const n=document.createElement("p");n.classList.add("description"),n.innerText='Keywords are extracted from both URL and raw text nodes. They are transformed to lowercase, parentheses are removed, and the remaining strings are split on various substrings (such as underscores or "et").',this.parent.prepend(n),this.countWords(t),this.drawCloud(e)}countWords(t){let e;for(let n of t)if(n.type===C.URL){const t=n.analysis;e=t.path[t.path.length-1],this.countWord(e,t.href)}else if(null!=n&&""!==n.toString().trim()){e=n.text,e.split(/,|;|\/| - | et /g).forEach(t=>{this.countWord(t,e)})}}countWord(t,e){let n=this.normalizeWord(t);this.wordCount.count(n),this.wordToOriginal.has(n)||this.wordToOriginal.set(n,new s),this.wordToOriginal.get(n).count(e)}normalizeWord(t){return t=(t=(t=(t=(t=decodeURI(t)).toLowerCase()).replace(/"| etc|\(.*\)/gi,"")).replace(/_/g," ")).trim()}drawCloud(t){let e,n;const a=this.wordCount.sortedEntries().slice(0,t),s=a.reduce((t,e)=>Math.max(t,e.count),1);for(let t=0;t<a.length;t++){if(0===t||10===t||50===t){e=document.createElement("div"),this.holder.appendChild(e);const n=0===t?"top-10":10===t?"top-50":"others";e.classList.add(n)}const i=a[t].key,o=a[t].count;n=document.createElement("div"),n.classList.add("word"),this.addToolTip(n,this.mapCounterToHTMLList(this.wordToOriginal.get(i))),n.innerText=i;const r=35*(o/s)+10;n.style.background=`hsl(202, 100%, ${r}%)`,e.appendChild(n)}}addToolTip(e,n){t(e,{content:n,interactive:!0,maxWidth:window.innerWidth})}mapCounterToHTMLList(t){let e="";return t.sortedEntries().forEach(t=>{e+=`<div style='font-family: "Roboto Mono", monospace;'>${t.key}</div><div style='text-align:right;font-family: "Roboto Mono", monospace;'>${t.count}</div>`}),"<div style='display: grid; grid-template-columns: auto auto;grid-column-gap: 10px;'>"+e+"</div>"}}class c{constructor(t="",e=!1){this.holder=document.createElement("div"),this.holder.classList.add("popup"),this.content=document.createElement("div"),this.content.classList.add("popup-content"),this.onClose=()=>{},this.title=t,this.init(e)}init(t){t&&this.initMask(),this.initUI(),this.display()}initUI(){let t=document.createElement("div");t.classList.add("popup-titlebar"),this.holder.appendChild(t);let e=document.createElement("h2");e.textContent=this.title,e.classList.add("popup-title"),t.appendChild(e);let n=document.createElement("button");n.classList.add("popup-close-button"),n.addEventListener("click",()=>{this.close()}),n.innerHTML="Close",t.appendChild(n),this.holder.appendChild(this.content)}display(){c.nbOpenPopups+=1,document.body.classList.add("popup-displayed"),document.body.appendChild(this.holder)}initMask(){this.maskBackground=document.createElement("div"),this.maskBackground.classList.add("background-mask"),this.maskBackground.addEventListener("click",()=>{this.close()}),document.body.appendChild(this.maskBackground)}setTitle(t){this.title=t,this.holder.querySelector(".popup-title").innerHTML=this.title}setMaxHeightContent(t){let e=window.getComputedStyle(this.content,null),n=parseInt(e.getPropertyValue("padding-top")),a=parseInt(e.getPropertyValue("padding-bottom"));this.content.style.maxHeight=`${t-n-a}px`}center(){let t=this.holder.getBoundingClientRect(),e=window.innerWidth,n=window.innerHeight/2-t.height/2,a=e/2-t.width/2;this.holder.style.top=`${n}px`,this.holder.style.left=`${a}px`}maximize(){this.holder.classList.add("maximized")}close(){c.nbOpenPopups-=1,0===c.nbOpenPopups&&document.body.classList.remove("popup-displayed"),void 0!==this.maskBackground&&this.maskBackground.remove(),this.holder.remove(),this.onClose()}setOnClose(t){this.onClose=t}}c.nbOpenPopups=0;class m{constructor(t,e){this.column=t,this.columnAnalysis=e,this.init()}init(){this.createNode()}createNode(){this.node=document.createElement("div"),this.node.classList.add("dashboard"),this.createColumnName(),this.createDataTypeVisualisation(),this.createTopCountriesVisualisation(),this.createTopDomainsVisualisation(),this.createWordCloudPreview(),this.createOtherVisualisationsDisplayButtons()}createColumnName(){const t=document.createElement("h2");t.classList.add("column-name"),t.textContent=this.column.name,this.node.append(t)}createDataTypeVisualisation(){const t=document.createElement("div");t.classList.add("distribution-chart");const e=document.createElement("h4");e.textContent="Cell type distribution",t.append(e);const n=document.createElement("div");function a(t,e){const a=document.createElement("div");a.classList.add("chart-label"),n.append(a);const s=document.createElement("span");s.classList.add("type"),s.textContent=t,a.appendChild(s);const i=e>.99&&e<1?">99%":e<.01&&e>0?"<1%":`${(100*e).toFixed(0)}%`,o=document.createElement("span");o.classList.add("percent"),o.textContent=i,a.appendChild(o)}n.classList.add("chart-container"),t.append(n);const s=document.createElement("div");function o(t,e){const n=document.createElement("div");n.classList.add("chart-area",t),n.style.width=`${(100*e).toFixed(1)}%`,s.append(n)}s.classList.add("chart");const r=this.columnAnalysis.cellTypes,l=r.countOf(i.URL),d=r.countOf(i.Text),h=l+d,u=l/h,c=d/h;a("URL",u),n.append(s),o("url-cells-area",u),o("text-cells-area",c),a("Text",c),this.node.append(t)}createTopCountriesVisualisation(){const t=document.createElement("div");t.classList.add("top-list","top-countries-list");const e=document.createElement("h4");function n(e,n,a=!0){const s=document.createElement("div");if(s.classList.add("list-entry"),t.append(s),a&&s.classList.add("aggregate"),null==e&&(e="Unknown"),a){const t=document.createElement("span");t.classList.add("flag-placeholder"),s.append(t)}else{const t=document.createElement("span"),n="Unknown"===e?"unknown":l[e].toLowerCase();t.classList.add("flag",`flag-${n}`),s.append(t)}const i=document.createElement("span");i.classList.add("name"),i.textContent=e,s.append(i);const o=n>.99&&n<1?">99%":n<.01&&n>0?"<1%":`${(100*n).toFixed(0)}%`,r=document.createElement("span");r.classList.add("percent"),r.textContent=o,s.append(r);const d=document.createElement("div");d.classList.add("bar-container"),s.append(d);const h=document.createElement("div");return h.classList.add("bar"),h.style.width=`${(100*n).toFixed(1)}%`,d.append(h),s}e.textContent="Top URL countries",t.append(e);const a=this.columnAnalysis.countries.counters,s=[...a.values()].reduce((t,e)=>t+e,0),i=[...a.entries()].map(([t,e])=>({country:t,percent:e/s})).sort((t,e)=>e.percent-t.percent),o=i.slice(0,4),r=1-o.reduce((t,e)=>t+e.percent,0);for(let t of o)n(t.country,t.percent,!1);if(r>0){const t=n("Others",r,!0),e=i.slice(4).map(t=>({value:t.country,percent:t.percent}));this.createValueToPercentListTooltip(t,e)}this.node.append(t)}createTopDomainsVisualisation(){const t=document.createElement("div");t.classList.add("top-list","top-domains-list");const e=document.createElement("h4");function n(e,n,a=!0){const s=document.createElement("div");s.classList.add("list-entry"),t.append(s),a&&s.classList.add("aggregate");const i=document.createElement("span");i.classList.add("name"),i.textContent=e,s.append(i);const o=n>.99&&n<1?">99%":n<.01&&n>0?"<1%":`${(100*n).toFixed(0)}%`,r=document.createElement("span");r.classList.add("percent"),r.textContent=o,s.append(r);const l=document.createElement("div");l.classList.add("bar-container"),s.append(l);const d=document.createElement("div");return d.classList.add("bar"),d.style.width=`${(100*n).toFixed(1)}%`,l.append(d),s}e.textContent="Top URL domains",t.append(e);const a=this.columnAnalysis.domains.counters,s=[...a.values()].reduce((t,e)=>t+e,0),i=[...a.entries()].map(([t,e])=>({domain:t,percent:e/s})).sort((t,e)=>e.percent-t.percent),o=i.slice(0,4),r=1-o.reduce((t,e)=>t+e.percent,0);for(let t of o)n(t.domain,t.percent,!1);if(r>0){const t=n("Others",r,!0),e=i.slice(4).map(t=>({value:t.domain,percent:t.percent}));this.createValueToPercentListTooltip(t,e)}this.node.append(t)}createWordCloudPreview(){const t=document.createElement("div");t.classList.add("word-cloud-preview");const e=document.createElement("h4");e.textContent="Top keywords",t.append(e),new u(this.column,t,10),this.node.append(t)}createOtherVisualisationsDisplayButtons(){const t=document.createElement("div");t.classList.add("display-buttons-area");const e=document.createElement("button");e.type="button",e.textContent="URL structures",e.classList.add("display-sankey-diagram"),e.addEventListener("click",()=>{let t=new c(`URL structures — ${this.column.name} column`);t.maximize(),new h(this.column,t.content)}),t.append(e);const n=document.createElement("button");n.type="button",n.textContent="All keywords",n.classList.add("display-word-cloud"),n.addEventListener("click",()=>{let t=new c(`Keywords — ${this.column.name} column`);t.maximize(),new u(this.column,t.content)}),t.append(n),this.node.append(t)}createValueToPercentListTooltip(e,n){const a=document.createElement("div");a.classList.add("two-columns-tooltip-content");for(let t of n){const e=t.value,n=t.percent,s=n>.99&&n<1?">99%":n<.01&&n>0?"<1%":`${(100*n).toFixed(0)}%`,i=document.createElement("span");i.classList.add("value"),i.textContent=e,a.append(i);const o=document.createElement("span");o.classList.add("percent"),o.textContent=s,a.append(o)}t(e,{content:a,interactive:!0,maxWidth:window.innerWidth,placement:"bottom-start"})}}class p{constructor(t,e){this.content=t,this.contentColumnAnalyses=e;const n=t.length();this.cachedPages=new Map,this.currentPage=null,this.currentPageNumber=1,this.pageLength=50,this.nbPages=n%this.pageLength==0?n/this.pageLength:Math.ceil(n/this.pageLength),this.init()}init(){this.createNode(),this.goToPage(this.currentPageNumber),this.initCallbacks(),this.startUpdatingDimensionsOnWindowResize(),this.startChangingPageOnKeyDown()}initCallbacks(){this.updateDimensionsCallback=()=>this.updateDimensions(),this.changePageCallback=t=>{const e="ArrowLeft"===t.code?Math.max(1,this.currentPageNumber-1):"ArrowRight"===t.code?Math.min(this.nbPages,this.currentPageNumber+1):this.currentPageNumber;e!==this.currentPageNumber&&this.goToPage(e)}}getPage(t){if(this.cachedPages.has(t))return this.cachedPages.get(t);{const e=this.createPage(t);return this.cachedPages.set(t,e),e}}createPage(t){const e=document.createElement("table");e.classList.add("page");const n=this.pageLength*(t-1),s=this.content.rows(n,this.pageLength);let i=n+1;for(let t of s){const n=document.createElement("tr");e.appendChild(n);const s=document.createElement("td");s.classList.add("row-number-cell"),s.textContent=i.toString(),n.appendChild(s),i++;for(let e of t){const t=document.createElement("td");if(t.classList.add("data-cell"),e.type===C.URL){const n=e.analysis,s=new a(n),i=document.createElement("a");i.setAttribute("href",n.url.href),i.setAttribute("target","_blank"),i.append(s.node),t.append(i),t.classList.add("url")}else{const n=e.text;t.textContent=n,t.classList.add("text")}n.appendChild(t)}}return{pageNumber:t,node:e}}createNode(){this.node=document.createElement("div"),this.node.classList.add("data-table"),this.createDashboardContainer(),this.createDashboards(),this.createContentContainer(),this.createPageBrowser()}createContentContainer(){this.contentContainerNode=document.createElement("div"),this.contentContainerNode.classList.add("content"),this.node.appendChild(this.contentContainerNode)}createPageBrowser(){this.pageBrowserNode=document.createElement("div"),this.pageBrowserNode.classList.add("page-browser");const t=document.createElement("button");t.classList.add("previous-page-button"),t.type="button",t.textContent="",t.addEventListener("click",()=>{this.goToPage(Math.max(1,this.currentPageNumber-1))}),this.pageBrowserNode.append(t);const e=document.createElement("input");e.classList.add("current-page-input"),e.textContent=this.currentPageNumber.toString(),e.addEventListener("change",()=>{let t=parseInt(e.value,10);isNaN(t)||(t=Math.max(1,Math.min(this.nbPages,t)),this.goToPage(t))}),this.pageBrowserNode.append(e);const n=document.createElement("span");n.classList.add("total-page-number"),n.textContent=this.nbPages.toString(),this.pageBrowserNode.append(n);const a=document.createElement("button");a.classList.add("next-page-button"),a.type="button",a.textContent="",a.addEventListener("click",()=>{this.goToPage(Math.min(this.nbPages,this.currentPageNumber+1))}),this.pageBrowserNode.append(a),this.contentContainerNode.appendChild(this.pageBrowserNode)}createDashboardContainer(){this.dashboardContainerNode=document.createElement("div"),this.dashboardContainerNode.classList.add("dashboard-container");const t=document.createElement("div");t.classList.add("controls"),this.dashboardContainerNode.append(t),this.node.appendChild(this.dashboardContainerNode)}createDashboards(){for(let t of this.content.columns()){const e=this.contentColumnAnalyses.get(t.name),n=new m(t,e);this.dashboardContainerNode.append(n.node)}}goToPage(t){this.currentPage=this.getPage(t),this.currentPageNumber=t,this.updateContent()}updateContent(){var t;null===(t=this.contentContainerNode.querySelector(".page"))||void 0===t||t.remove(),this.contentContainerNode.prepend(this.currentPage.node),this.updatePageBrowser()}updatePageBrowser(){this.pageBrowserNode.querySelector(".previous-page-button").disabled=1===this.currentPageNumber,this.pageBrowserNode.querySelector(".current-page-input").value=this.currentPageNumber.toString(),this.pageBrowserNode.querySelector(".total-page-number").textContent=this.nbPages.toString(),this.pageBrowserNode.querySelector(".next-page-button").disabled=this.currentPageNumber===this.nbPages}updateDimensions(){const t=getComputedStyle(document.documentElement),e=parseInt(t.getPropertyValue("--min-column-width-px"),10),n=parseInt(t.getPropertyValue("--min-row-number-column-width-px"),10),a=[...this.content.columns()].length;let s="";const i=Math.max(n,Math.floor(.02*document.documentElement.clientWidth));s+=`--column-width: ${Math.max(e,Math.floor((document.documentElement.clientWidth-i)/a))}px;                  --row-number-column-width: ${i}px;`,s+=`min-width: ${a*e+n}px;`,this.node.setAttribute("style",s)}startUpdatingDimensionsOnWindowResize(){window.addEventListener("resize",this.updateDimensionsCallback)}stopUpdatingDimensionsOnWindowResize(){window.removeEventListener("resize",this.updateDimensionsCallback)}startChangingPageOnKeyDown(){window.addEventListener("keydown",this.changePageCallback)}stopChangingPageOnKeyDown(){window.removeEventListener("keydown",this.changePageCallback)}}class g{constructor(t){this.url=new URL(t),this.analyse()}analyse(){var t;const e=this.url.hostname.split(".");this.url=this.url,this.href=this.url.href,this.protocol=this.url.protocol.slice(0,-1),this.tld=e.pop(),this.domain=e.pop(),this.subdomains=e,this.path=this.url.pathname.slice(1).split("/"),this.anchor=this.url.hash.slice(1),this.parameters=this.url.searchParams;const n=this.extractCountryCode();this.country=null!=(t=r[n])?t:null,this.countryCode=n;const a=this.extractTitle();this.title=a}extractTitle(){return null}extractCountryCode(){const t=this.url.hostname.slice(0,this.url.hostname.indexOf(".")).toUpperCase();if(r.hasOwnProperty(t))return t;const e=this.url.pathname.slice(1,this.url.hostname.indexOf("/",1)).toUpperCase();if(r.hasOwnProperty(e))return e;const n=this.url.hostname.slice(this.url.hostname.lastIndexOf(".")).toUpperCase();return r.hasOwnProperty(n)?n:null}get(t){switch(t){case"countryCode":return this.countryCode;case"domain":return this.domain;case"protocol":return this.protocol;default:console.error("No parameter of name: ",t)}}}var C;!function(t){t[t.Text=0]="Text",t[t.URL=1]="URL"}(C||(C={}));new class{constructor(){this.responseData=null,this.columnAnalyses=new Map,this.init()}init(){this.loadResponseData(),this.analyseColumns(),this.display()}loadResponseData(){const t=document.getElementById("sparql-response");this.responseData=n.fromHTMLTable(t).map(t=>{try{const e=new g(encodeURI(t));return{type:C.URL,analysis:e}}catch(e){return{type:C.Text,text:t}}})}analyseColumns(){for(let t of this.responseData.columns()){const e=new o(t);this.columnAnalyses.set(t.name,e)}}display(){const t=new p(this.responseData,this.columnAnalyses);document.querySelector("#sparql-response").remove(),document.querySelector("body").append(t.node),t.updateDimensions()}}}));
